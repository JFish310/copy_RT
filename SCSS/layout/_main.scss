    .Main{
      padding-top: 50px;
    }
    
    /* 3枚目の背景画像の設定 */
    .p-Top_Head{
      height: 300px;  // 高さ
      // このpaddingを設定することで、背景画像が少しズームされるように見える
      padding-bottom: 320px;  
      position: relative; // 相対位置への配置
      // 本家では設定されているが、なくても良い？？
      //overflow: hidden; // 内容がボックスに収まらない場合、収まらない部分は非表示となる。内容が収まらない場合にも、スクロールバーなどは表示されない
      background-image: url("../img/bg-hero3.png");
      background-repeat: no-repeat;
      background-position: center -25px;  // x=真ん中, y=-25pxなので上に25pxずれる
      background-size: cover; // 縦横比は保持して、背景領域を完全に覆う最小サイズになるように背景画像を拡大縮小する
      background-attachment: fixed; // 背景はビューポートに対する相対位置で固定される
    }
    
    /* 最初の説明文全体のところ */
    .p-Top_Head_layer1{
      /* ↓↓↓↓↓共通レイヤー↓↓↓↓↓ */
      position: absolute;
      top: 0;
      width: 100%;
      height: 100%;  // 高さ
      /* ↑↑↑↑↑共通レイヤー↑↑↑↑↑ */

      // 背景画像に関するプロパティ
      background-image: url("../img/bg-hero1.png");
      background-repeat: no-repeat;
      background-position: center -30px;  // x=真ん中, y=-30px
      background-size: cover; // 縦横比は保持して、背景領域を完全に覆う最小サイズになるように背景画像を拡大縮小する

      // これを有効にすることで、白背景の部分が下に下がった
      display: flex;  // その直下の要素が並列になるスタイル
      justify-content: center;  /* アイテムを中央に寄せる */

      // 本家には設定してあるけど影響なさそう
      //padding-top: 80px;

      // フレックスアイテム=白背景部分
      align-items: flex-end;  /* フレックスアイテムを末尾にまとめる */

      z-index: 200;
      
      // @include breakpoint( width_768 ){
      //   max-width: 530px;
      //   border-radius: 10px;
      //   padding: 43px 40px 19px;
      // }
    }
    
    .p-Top_Head_layer2{
      /* ↓↓↓↓↓共通レイヤー↓↓↓↓↓ */
      position: absolute;
      top: 0;
      width: 100%;
      height: 100%;  // 高さ
      /* ↑↑↑↑↑共通レイヤー↑↑↑↑↑ */

      // 背景画像に関するプロパティ
      background-image: url("../img/bg-hero2.png");
      background-repeat: no-repeat;
      background-position: center -25px;  // x=真ん中, y=-25px
      background-size: cover; // 縦横比は保持して、背景領域を完全に覆う最小サイズになるように背景画像を拡大縮小する
      z-index: 10;

    }



    .p-Top_Head_body{
      width: 100%;
      max-width: 100%;
      padding: 9px 0 13px;
      border-radius: 0; //四隅
      background-color: $color--white;
      text-align: center;
      /* 「はじめまして」の文章のところ */
      p{
        color: $color--sentence-black;
        font-size: 1.3rem;
        margin: .5em 0;
        font-weight: 700;   // フォントの太さ
        }
      // 「はじめまして」上のRTロゴ
      img{
        display: none;
        @include breakpoint( width_768 ){
          display: block;
          height: auto;
        }
      }
    }

    .c-wrap{
      margin: 0 10px;
      max-width: 1078px;
    }
    // 理念
    .p-Philosophy{
      margin-top: 0;
      flex-direction: column; /* 積み重なるように配置する */
      align-items: center;

      background-color: $color--black;
      color: $color--white;
      padding: 4em 0;
    }

    .Philosophy_entry{
      margin-bottom: 2.5em;
      width: auto;
      //margin: 0 2%;
    }
    
    // アイコンとタイトル
    .Philosophy_title{
      display: block;
      justify-content: center;  /* アイテムを中央に寄せる */
      margin-block-start: 1em;
      margin-block-end: 1em;
      margin-inline-start: 0px;
      margin-inline-end: 0px;
      text-align: center;
      margin: .2em 0 0;
      font-size: 2.4rem;
      p{
        font-weight: 700;
      }
    }

    // アイコン
    .Philosophy_icon{
      display: flex;
      // -webkit-box-pack: center;  // Google Chrome、Safari向け
      justify-content: center;  /* アイテムを中央に寄せる */
      align-items: center;
      width: 230px;
      height: 230px;
      margin: 0 auto;
      color: $color--black;
      border: solid 6px $color--black;
      border-radius: 50%;       /* サークル */
      background: $color--white;
      font-size: 100px;
    }

    // 説明文
    .Philosophy_sentence{
      text-align: left;
      p{
        margin: .5em 0 0;
        line-height: 1.7;
        font-weight: 700;
      }
    }



/*  */